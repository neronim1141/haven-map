// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Map {
  id           Int     @id @default(autoincrement())
  name         String?
  hidden       Boolean @default(false)
  priority     Boolean @default(false)
  winterUpdate Boolean @default(true)
}

model Grid {
  id          String   @id
  mapId       Int
  tileData    Bytes? // need to be optional because the tileData is uploaded in the next request
  lastUpdated String?
  x           Int
  y           Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
}

model Tile {
  id        Int      @id @default(autoincrement())
  gridId    String?  @unique
  mapId     Int
  x         Int
  y         Int
  z         Int
  tileData  Bytes
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Marker {
  id        String   @id
  image     String?
  x         Int
  y         Int
  gridId    String
  name      String
  hidden    Boolean  @default(false)
  type      String   @default("custom")
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model MarkerIcon {
  id       Int    @id @default(autoincrement())
  image    String @unique
  iconData Bytes
}

model User {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  password  String
  role      Role     @default(NEED_CHECK)
  token     String
  createdAt DateTime @default(now())
  lastVisit DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

enum Role {
  NEED_CHECK // new registered user need to have role assigned
  ALLY // access to map can send new tiles, local resources
  VILLAGER // access to map, custom markers, characters
  ADMIN // access to all
}
